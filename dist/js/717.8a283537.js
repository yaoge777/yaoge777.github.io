"use strict";(self["webpackChunkblog_vue3"]=self["webpackChunkblog_vue3"]||[]).push([[717],{7627:function(e,t,n){n.d(t,{A:function(){return l}});var s=n(2594);const l=(0,s.Q_)("counter",{state:()=>({isArticle:!0,sideShow:!0,buttonShow:!0,titles:[{id:"",title:""}]}),actions:{},getters:{}})},8497:function(e,t,n){n.d(t,{Z:function(){return c}});var s=n(3396),l=n(7178);const o={class:"container"},i=["id"];var r=(0,s.aZ)({__name:"CodeModel",props:{num:String},setup(e){const t=e,n=()=>{const e=document.querySelector(`#${t.num}`);navigator.clipboard.writeText(e.textContent),(0,l.z8)({message:"复制成功！",type:"success"})};return(e,l)=>{const r=(0,s.up)("el-button");return(0,s.wg)(),(0,s.iD)("div",o,[(0,s.Wm)(r,{type:"primary",class:"copy-button",onClick:n},{default:(0,s.w5)((()=>[(0,s.Uk)("复制代码")])),_:1}),(0,s._)("code",{id:t.num},[(0,s.WI)(e.$slots,"default")],8,i)])}}}),a=n(89);const u=(0,a.Z)(r,[["__scopeId","data-v-3e52158c"]]);var c=u},9717:function(e,t,n){n.r(t),n.d(t,{default:function(){return y}});var s=n(3396),l=n(8497),o=n(7627);const i=e=>((0,s.dD)("data-v-78f4de4a"),e=e(),(0,s.Cn)(),e),r={class:"container"},a={style:{width:"90%"}},u=i((()=>(0,s._)("h1",null,"利用promise进行实现防闪",-1))),c=i((()=>(0,s._)("p",null,[(0,s.Uk)("记录一个从b站上学到的利用promise进行防抖的实例。实现效果参考我 "),(0,s._)("a",{href:"http://yaoge888.github.io"},"另外一个项目"),(0,s.Uk)("的这个部分")],-1))),d=i((()=>(0,s._)("img",{src:"pics/j2-1.jpg",alt:"项目位置"},null,-1))),p=i((()=>(0,s._)("h2",{id:"js1"},"#防闪指的是什么",-1))),m=i((()=>(0,s._)("p",null,"在点击菜单栏进行页面切换的时候，我们往往会加入一些等待时的动画提高用户的使用体验。 然而，如果等待的时间的太短会导致动画闪一下就消失了，实际体验并不好。这篇文章就来分享一个解决办法。",-1))),_=i((()=>(0,s._)("h2",{id:"js2"},"#sleep函数返回promise",-1))),v=i((()=>(0,s._)("pre",null,"        const sleep = (t:number) => {\n          return new Promise <void>(resolve => {\n            setTimeout(() => {\n              resolve()\n            }, t)\n          })\n        }\n      ",-1))),f=i((()=>(0,s._)("p",null,"首先我们来创建一个函数，接受一个时间作为参数。函数返回一个promise，并在指定的时间后resolve",-1))),g=i((()=>(0,s._)("h2",{id:"js3"},"#Promise.all",-1))),h=i((()=>(0,s._)("pre",null,"          onMounted(() => {\n            Promise.all([getFruitCards(), sleep(300)]).then((res) => {\n              imgs.value= res[0].data.data.reverse()\n              loading.value=false\n            })\n          })\n        ",-1))),w=i((()=>(0,s._)("p",null,"接下来执行promise.all 方法。promise.all传入两个promise，分别是我们切换页面时执行的api， 另一个即为我们之前声明的sleep函数，我这里设定的时间为300ms。 这样一来，就算api在300ms之内执行完毕并返回了结果，程序依然要等待sleep函数执行完毕，才会执行之后的代码。",-1)));var b=(0,s.aZ)({__name:"JsTwo",setup(e){const t=(0,o.A)(),n=[{id:"js1",title:"防闪指的是什么"},{id:"js2",title:"sleep函数返回promise"},{id:"js3",title:"Promise.all"}];return t.titles=n,(e,t)=>((0,s.wg)(),(0,s.iD)("div",r,[(0,s._)("div",a,[u,c,d,p,m,_,(0,s.Wm)(l.Z,{num:"cm1"},{default:(0,s.w5)((()=>[v])),_:1}),f,g,(0,s.Wm)(l.Z,{num:"cm2"},{default:(0,s.w5)((()=>[h])),_:1}),w])]))}}),j=n(89);const k=(0,j.Z)(b,[["__scopeId","data-v-78f4de4a"]]);var y=k}}]);
//# sourceMappingURL=717.8a283537.js.map