"use strict";(self["webpackChunkblog_vue3"]=self["webpackChunkblog_vue3"]||[]).push([[618],{7627:function(e,n,t){t.d(n,{A:function(){return s}});var l=t(2594);const s=(0,l.Q_)("counter",{state:()=>({isArticle:!0,sideShow:!0,buttonShow:!0,titles:[{id:"",title:""}]}),actions:{},getters:{}})},8497:function(e,n,t){t.d(n,{Z:function(){return u}});var l=t(3396),s=t(7178);const o={class:"container"},a=["id"];var r=(0,l.aZ)({__name:"CodeModel",props:{num:String},setup(e){const n=e,t=()=>{const e=document.querySelector(`#${n.num}`);navigator.clipboard.writeText(e.textContent),(0,s.z8)({message:"复制成功！",type:"success"})};return(e,s)=>{const r=(0,l.up)("el-button");return(0,l.wg)(),(0,l.iD)("div",o,[(0,l.Wm)(r,{type:"primary",class:"copy-button",onClick:t},{default:(0,l.w5)((()=>[(0,l.Uk)("复制代码")])),_:1}),(0,l._)("code",{id:n.num},[(0,l.WI)(e.$slots,"default")],8,a)])}}}),d=t(89);const i=(0,d.Z)(r,[["__scopeId","data-v-3e52158c"]]);var u=i},5618:function(e,n,t){t.r(n),t.d(n,{default:function(){return M}});var l=t(3396),s=t(8497),o=t(7627);const a=e=>((0,l.dD)("data-v-16b68106"),e=e(),(0,l.Cn)(),e),r={class:"container"},d={style:{width:"90%"}},i=a((()=>(0,l._)("h1",null,"Vue3插槽",-1))),u=a((()=>(0,l._)("h2",{id:"vue1"},"#子组件只有一个插槽的写法",-1))),p=a((()=>(0,l._)("p",null,"子组件通过slot标签创建一个插槽。注意如果插槽内填入了内容，那么这些内容会被视为默认内容。 当父组件，也只有当父组件没有使用插槽时，会渲染默认内容。否则，会渲染父组件提供的内容",-1))),m=a((()=>(0,l._)("pre",null,"          \n          <template>\n            <div>\n              我有一个\n            <slot>苹果</slot>\n            </div>\n          </template>\n\n\n          \n          <template>\n            <children>\n              梨\n            </children>\n          </template>\n       ",-1))),c=a((()=>(0,l._)("p",null,"比如，以上代码渲染的结果为“我有一个梨”",-1))),v=a((()=>(0,l._)("h2",{id:"vue2"},"#多个插槽的写法",-1))),h=a((()=>(0,l._)("p",null,"如果有多个插槽，则要使用具名插槽，即使用name属性给slot命名。",-1))),_=a((()=>(0,l._)("pre",null,'         \n         <template>\n          <div>\n            <header>\n              <slot name="header"></slot>\n            </header>\n            <main>\n              <slot></slot>\n             </main>\n            <footer>\n               <slot name="footer"></slot>\n            </footer>\n          </div>\n         </template>\n\n\n         \n          <template>\n            <children>\n             <template v-slot:header>\n               < h1>这里是header</h1>\n          </template>\n\n          <template #default>  \n            <p>这里是body</p>\n          </template>\n\n          <template #footer>\n            <p>这里是footer</p>\n            </template>\n            </children>\n          </template>\n\n        ',-1))),f=a((()=>(0,l._)("h2",{id:"vue3"},"#作用域插槽",-1))),b=a((()=>(0,l._)("p",null,[(0,l.Uk)("请注意"),(0,l._)("span",null,"插槽的内容无法访问到子组件的状态"),(0,l.Uk)("。 所以如果想要使用子组件的状态，需要让子组件传递给父组件")],-1))),w=a((()=>(0,l._)("pre",null,'\n          \n        <div>\n          <slot :text="message" :count="1"></slot>\n        </div>\n\n\n        ',-1))),C=a((()=>(0,l._)("p",null,'父组件需要使用v-slot="slotProps" 接受状态，注意这是一个固定写法',-1))),g=a((()=>(0,l._)("pre",null,'\n         \n          <children v-slot="slotProps">    \n            {{ slotProps.text }} {{ slotProps.count }}   \n          </children>\n\n          \n          <children v-slot="{text, count}">    \n            {{ text }} {{ count }}   \n          </children>\n\n\n        ',-1))),y=a((()=>(0,l._)("h2",{id:"vue4"},"#具名作用域插槽",-1))),Z=a((()=>(0,l._)("p",null,"父组件接收状态时， slotProps改成 ‘slot名字’+‘Props’，这里也是固定写法",-1))),P=a((()=>(0,l._)("pre",null,"\n        <template>\n          <div>\n            <h2>Parent Component</h2>\n            <ChildComponent v-model:title.reverse=\"message\" />\n            <p>Parent Component Message: {{ message }}</p>\n          </div>\n        </template>\n\n        <script setup>\n          import ChildComponent from './ChildComponent.vue';\n          import { ref } from 'vue';\n\n          const message = ref('');\n\n          <\/script>\n\n\n        ",-1))),k=a((()=>(0,l._)("h2",{id:"vue5"},"#el-card源码解析",-1))),x=a((()=>(0,l._)("p",null,"以下代码来自element-plus github",-1))),W=a((()=>(0,l._)("pre",null,'        <template>\n          <div :class="[ns.b(), ns.is(`${shadow}-shadow`)]">\n            <div v-if="$slots.header || header" :class="ns.e(\'header\')">\n              <slot name="header">{{ header }}</slot>\n            </div>\n            <div :class="ns.e(\'body\')" :style="bodyStyle">\n            <slot />\n             </div>\n           </div>\n        </template>\n        <script lang="ts" setup>\n          import { useNamespace } from \'@element-plus/hooks\'\n          import { cardProps } from \'./card\'\n\n          defineOptions({\n            name: \'ElCard\',\n          })\n\n          defineProps(cardProps)\n\n          const ns = useNamespace(\'card\')\n        <\/script>\n\n        ',-1))),S=a((()=>(0,l._)("p",null,"我们只用看插槽的部分，其他可以无视掉。我们看到，这里使用了两个插槽header和default。 这里先做了一个判断。$slots.header可以提取到名字为header的slot里的内容，如果内容为空，则不会渲染这个插槽。以下是官网演示的使用方法",-1))),$=a((()=>(0,l._)("pre",null,'          <template>\n            <el-card class="box-card">\n              <template #header>\n                <div class="card-header">\n                  <span>Card name</span>\n                  <el-button class="button" text>Operation button</el-button>\n                </div>\n              </template>\n              <div v-for="o in 4" :key="o" class="text item">{{ \'List item \' + o }}</div>\n            </el-card>\n          </template>\n\n        ',-1))),A=a((()=>(0,l._)("p",null,"template标签下的内容，因为表明了#header，所以将会被渲染到header这个slot下。而div标签的内容，因为没有template标签，将会被渲染到 default的slot",-1)));var D=(0,l.aZ)({__name:"VueTwo",setup(e){const n=(0,o.A)(),t=[{id:"vue1",title:"子组件只有一个插槽的写法"},{id:"vue2",title:"多个插槽的写法"},{id:"vue3",title:"作用域插槽"},{id:"vue4",title:"具名作用域插槽"},{id:"vue5",title:"el-card源码解析"}];return n.titles=t,(e,n)=>((0,l.wg)(),(0,l.iD)("div",r,[(0,l._)("div",d,[i,u,p,(0,l.Wm)(s.Z,{num:"cm1"},{default:(0,l.w5)((()=>[m])),_:1}),c,v,h,(0,l.Wm)(s.Z,{num:"cm2"},{default:(0,l.w5)((()=>[_])),_:1}),f,b,(0,l.Wm)(s.Z,{num:"cm3"},{default:(0,l.w5)((()=>[w])),_:1}),C,(0,l.Wm)(s.Z,{num:"cm4"},{default:(0,l.w5)((()=>[g])),_:1}),y,Z,(0,l.Wm)(s.Z,{num:"cm5"},{default:(0,l.w5)((()=>[P])),_:1}),k,x,(0,l.Wm)(s.Z,{num:"cm6"},{default:(0,l.w5)((()=>[W])),_:1}),S,(0,l.Wm)(s.Z,{num:"cm7"},{default:(0,l.w5)((()=>[$])),_:1}),A])]))}}),I=t(89);const U=(0,I.Z)(D,[["__scopeId","data-v-16b68106"]]);var M=U}}]);
//# sourceMappingURL=618.fce0b5f3.js.map